{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "# Housing Price Prediction \u2014 Linear Regression\n",
        "Kaggle options: Ames or House Prices datasets (House Prices - Advanced Regression Techniques competition).\n",
        "Example Kaggle dataset: https://www.kaggle.com/competitions/house-prices-advanced-regression-techniques\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# Example download (choose dataset id):\n",
        "# kaggle competitions download -c house-prices-advanced-regression-techniques -p ./data\n",
        "import pandas as pd\n",
        "from pathlib import Path\n",
        "data_dir = Path('data')\n",
        "data_dir.mkdir(exist_ok=True)\n",
        "csv_list = list(data_dir.glob('*.csv'))\n",
        "print('CSV files:', csv_list)\n",
        "if csv_list:\n",
        "    df = pd.read_csv(csv_list[0])\n",
        "else:\n",
        "    df = pd.DataFrame()\n",
        "print('shape', getattr(df,'shape',None))\n"
      ],
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "if not df.empty:\n",
        "    from sklearn.model_selection import train_test_split\n",
        "    from sklearn.linear_model import LinearRegression\n",
        "    from sklearn.metrics import r2_score, mean_squared_error\n",
        "    # basic feature selection (numeric only)\n",
        "    num = df.select_dtypes(include=['int64','float64']).dropna(axis=1)\n",
        "    if 'SalePrice' in num.columns:\n",
        "        X = num.drop(columns=['SalePrice'])\n",
        "        y = num['SalePrice']\n",
        "        X_train, X_test, y_train, y_test = train_test_split(X.fillna(0), y, test_size=0.2, random_state=42)\n",
        "        model = LinearRegression()\n",
        "        model.fit(X_train, y_train)\n",
        "        preds = model.predict(X_test)\n",
        "        print('R2:', r2_score(y_test, preds))\n        \n",
        "        import matplotlib.pyplot as plt\n",
        "        plt.scatter(y_test, preds, alpha=0.5)\n",
        "        plt.xlabel('Actual')\n",
        "        plt.ylabel('Predicted')\n",
        "        plt.title('Predicted vs Actual')\n",
        "        plt.show()\n",
        "else:\n",
        "    print('No dataset present in data/')\n"
      ],
      "outputs": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "name": "python",
      "version": "3.x"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}

{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "# Telco Customer Churn \u2014 EDA\n",
        "Download the Telco Customer Churn dataset from Kaggle and run EDA.\n",
        "Kaggle dataset: https://www.kaggle.com/datasets/blastchar/telco-customer-churn\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# kaggle datasets download -d blastchar/telco-customer-churn -p ./data --unzip\n",
        "import pandas as pd\n",
        "from pathlib import Path\n",
        "data_dir = Path('data')\n",
        "data_dir.mkdir(exist_ok=True)\n",
        "csv_list = list(data_dir.glob('*.csv'))\n",
        "print('CSV files:', csv_list)\n",
        "df = pd.read_csv(csv_list[0]) if csv_list else pd.DataFrame()\n",
        "print('Data shape:', df.shape)\n"
      ],
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "if not df.empty:\n",
        "    import matplotlib.pyplot as plt\n",
        "    import seaborn as sns\n",
        "    # simple churn rate by contract\n",
        "    if 'contract' in df.columns and 'Churn' in df.columns:\n",
        "        churn_by_contract = df.groupby('contract')['Churn'].value_counts(normalize=True).unstack().fillna(0)\n",
        "        churn_by_contract['Yes'].plot(kind='bar', title='Churn rate by contract')\n",
        "        plt.show()\n",
        "    # heatmap for numeric correlations\n",
        "    num_cols = df.select_dtypes(include=['int64','float64']).columns\n",
        "    if len(num_cols) > 1:\n",
        "        corr = df[num_cols].corr()\n",
        "        sns.heatmap(corr, annot=True)\n",
        "        plt.title('Correlation matrix')\n",
        "        plt.show()\n",
        "else:\n",
        "    print('No data. Please download the dataset into data/')\n"
      ],
      "outputs": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "name": "python",
      "version": "3.x"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}
